// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Schemasforfarmer.Models;

namespace Schemasforfarmer.Migrations
{
    [DbContext(typeof(AgricultureContext))]
    [Migration("20220322104735_new1")]
    partial class new1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Schemasforfarmer.Models.ApplyForPolicy", b =>
                {
                    b.Property<int>("PolicyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Area")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CropName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InsuranceCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PolicyNo")
                        .HasColumnType("int");

                    b.Property<int?>("PolicyNoNavigationInsuranceId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PremiumAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Season")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("SharePremium")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SumInsured")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SumInsuredperhect")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("Year")
                        .HasColumnType("datetime2");

                    b.HasKey("PolicyId");

                    b.HasIndex("PolicyNoNavigationInsuranceId");

                    b.ToTable("tbl_Policy");
                });

            modelBuilder.Entity("Schemasforfarmer.Models.BankDetails", b =>
                {
                    b.Property<int>("BankId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountNo")
                        .HasColumnType("int");

                    b.Property<int>("Adhar")
                        .HasColumnType("int");

                    b.Property<string>("Ifsccode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TraderLicense")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BankId");

                    b.HasIndex("UserId");

                    b.ToTable("tbl_BankData");
                });

            modelBuilder.Entity("Schemasforfarmer.Models.BidderDetailsModel", b =>
                {
                    b.Property<int>("BidderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BidderAccountNumber")
                        .HasColumnType("int");

                    b.Property<string>("BidderAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BidderAdharCard")
                        .HasColumnType("int");

                    b.Property<string>("BidderCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BidderContact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BidderEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BidderFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BidderIfscCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BidderPan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BidderPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BidderPincode")
                        .HasColumnType("int");

                    b.Property<string>("BidderState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BidderTraderLicense")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BidderId");

                    b.ToTable("tbl_BidderDetails");
                });

            modelBuilder.Entity("Schemasforfarmer.Models.BidderWelcomePage", b =>
                {
                    b.Property<int>("WelcomeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("BasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Bidammount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CropName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CropType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("CurrentBid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("WelcomeId");

                    b.HasIndex("UserId");

                    b.ToTable("tbl_Welcome");
                });

            modelBuilder.Entity("Schemasforfarmer.Models.Bidding", b =>
                {
                    b.Property<int>("BiddingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("BidAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("BidDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsBitStatus")
                        .HasColumnType("bit");

                    b.Property<int?>("SellId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BiddingId");

                    b.HasIndex("SellId");

                    b.HasIndex("UserId");

                    b.ToTable("tbl_Bidding");
                });

            modelBuilder.Entity("Schemasforfarmer.Models.ClaimInsurance", b =>
                {
                    b.Property<int>("InsuranceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CauseOfLoss")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfLoss")
                        .HasColumnType("datetime2");

                    b.Property<string>("InsuranceCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameOfInsuree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParticularsOfInsuree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PolicyNo")
                        .HasColumnType("int");

                    b.Property<decimal?>("SumInsured")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("InsuranceId");

                    b.ToTable("tbl_Insurance");
                });

            modelBuilder.Entity("Schemasforfarmer.Models.CropType", b =>
                {
                    b.Property<int>("CropTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CropTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CropTypeId");

                    b.ToTable("tbl_CropType");
                });

            modelBuilder.Entity("Schemasforfarmer.Models.FarmerDetailsModel", b =>
                {
                    b.Property<int>("FarmerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FarmerAccountNumber")
                        .HasColumnType("int");

                    b.Property<string>("FarmerAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FarmerAdharCard")
                        .HasColumnType("int");

                    b.Property<string>("FarmerCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FarmerContact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FarmerEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FarmerFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FarmerIfscCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FarmerLandAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FarmerLandArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FarmerLandPincode")
                        .HasColumnType("int");

                    b.Property<string>("FarmerPan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FarmerPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FarmerPincode")
                        .HasColumnType("int");

                    b.Property<string>("FarmerState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FarmerTraderLicense")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FarmerId");

                    b.ToTable("tbl_FarmerDetails");
                });

            modelBuilder.Entity("Schemasforfarmer.Models.LoginInfo", b =>
                {
                    b.Property<int>("LoginId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmailId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("UserTypeId")
                        .HasColumnType("int");

                    b.HasKey("LoginId");

                    b.HasIndex("UserId");

                    b.HasIndex("UserTypeId");

                    b.ToTable("tbl_LoginInfo");
                });

            modelBuilder.Entity("Schemasforfarmer.Models.PlaceSellRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CropName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CropType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FertilizerType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SoilPhCertificate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("tbl_PlaceSellRequest");
                });

            modelBuilder.Entity("Schemasforfarmer.Models.Sell", b =>
                {
                    b.Property<int>("SellId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("BasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CropName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CropTypeId")
                        .HasColumnType("int");

                    b.Property<string>("FertilizerType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("SellId");

                    b.HasIndex("CropTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("tbl_Sell");
                });

            modelBuilder.Entity("Schemasforfarmer.Models.UserDetails", b =>
                {
                    b.Property<int>("UserTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UserType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserTypeId");

                    b.ToTable("tbl_UserDetails");
                });

            modelBuilder.Entity("Schemasforfarmer.Models.UserInfo", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ContactNo")
                        .HasColumnType("int");

                    b.Property<string>("EmailId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermittedtoSale")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pincode")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserTypeId")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("UserTypeId");

                    b.ToTable("tbl_UserInfo");
                });

            modelBuilder.Entity("Schemasforfarmer.Models.ViewMarketPlace", b =>
                {
                    b.Property<int>("MarketPlaceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("BasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CropName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CropType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("CurrentBid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("MarketPlaceId");

                    b.HasIndex("UserId");

                    b.ToTable("tbl_ViewMarketPlace");
                });

            modelBuilder.Entity("Schemasforfarmer.Models.ViewSoldCropHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CropName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Msp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SolidPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("tbl_ViewSoldCropHistory");
                });

            modelBuilder.Entity("Schemasforfarmer.Models.ApplyForPolicy", b =>
                {
                    b.HasOne("Schemasforfarmer.Models.ClaimInsurance", "PolicyNoNavigation")
                        .WithMany("ApplyForPolicy")
                        .HasForeignKey("PolicyNoNavigationInsuranceId");
                });

            modelBuilder.Entity("Schemasforfarmer.Models.BankDetails", b =>
                {
                    b.HasOne("Schemasforfarmer.Models.UserInfo", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Schemasforfarmer.Models.BidderWelcomePage", b =>
                {
                    b.HasOne("Schemasforfarmer.Models.UserInfo", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Schemasforfarmer.Models.Bidding", b =>
                {
                    b.HasOne("Schemasforfarmer.Models.Sell", "Sell")
                        .WithMany("Bidding")
                        .HasForeignKey("SellId");

                    b.HasOne("Schemasforfarmer.Models.UserInfo", "User")
                        .WithMany("Bidding")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Schemasforfarmer.Models.LoginInfo", b =>
                {
                    b.HasOne("Schemasforfarmer.Models.UserInfo", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.HasOne("Schemasforfarmer.Models.UserDetails", "UserType")
                        .WithMany()
                        .HasForeignKey("UserTypeId");
                });

            modelBuilder.Entity("Schemasforfarmer.Models.PlaceSellRequest", b =>
                {
                    b.HasOne("Schemasforfarmer.Models.UserInfo", "User")
                        .WithMany("PlaceSellRequest")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Schemasforfarmer.Models.Sell", b =>
                {
                    b.HasOne("Schemasforfarmer.Models.CropType", "CropType")
                        .WithMany("Sell")
                        .HasForeignKey("CropTypeId");

                    b.HasOne("Schemasforfarmer.Models.UserInfo", "User")
                        .WithMany("Sell")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Schemasforfarmer.Models.UserInfo", b =>
                {
                    b.HasOne("Schemasforfarmer.Models.UserDetails", "UserType")
                        .WithMany("UserInfo")
                        .HasForeignKey("UserTypeId");
                });

            modelBuilder.Entity("Schemasforfarmer.Models.ViewMarketPlace", b =>
                {
                    b.HasOne("Schemasforfarmer.Models.UserInfo", "User")
                        .WithMany("ViewMarketPlace")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Schemasforfarmer.Models.ViewSoldCropHistory", b =>
                {
                    b.HasOne("Schemasforfarmer.Models.UserInfo", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
